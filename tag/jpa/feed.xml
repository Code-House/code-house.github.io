<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jpa on The Code-House Blog</title>
    <link>https://blog.code-house.org/tag/jpa/</link>
    <description>Recent content in Jpa on The Code-House Blog</description>
    <generator>Hugo -- 0.147.0</generator>
    <language>pl-PL</language>
    <lastBuildDate>Fri, 04 Sep 2009 13:31:45 +0000</lastBuildDate>
    <atom:link href="https://blog.code-house.org/tag/jpa/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dwie klasy redukujące ilość kodu w encjach JPA</title>
      <link>https://blog.code-house.org/2009/09/dwie-klasy-redukujace-ilosc-kodu-w-encjach-jpa/</link>
      <pubDate>Fri, 04 Sep 2009 13:31:45 +0000</pubDate>
      <guid>https://blog.code-house.org/2009/09/dwie-klasy-redukujace-ilosc-kodu-w-encjach-jpa/</guid>
      <description>&lt;p&gt;Z pewnością nie jest to odkrycie godne podziwu czy też coś, co może realizować z nowinkami JPA 2.0, nie mniej jest to kod bez którego żaden projekt obejść się nie może - mianowicie identyfikacja encji.&lt;/p&gt;
&lt;p&gt;Borykałem się z problemem dosyć pospolitym, mianowicie pozbyciem się z każdej encji kodu:
[sourcecode lang=&amp;ldquo;java&amp;rdquo;]@Id
@GeneratedValue(strategy = GenerationType.IDENTITY)
private Long id;
[/sourcecode]
Nic dziwnego, 40 encji to aż 120 powtórzonych, niepotrzebnie powielonych linii. Nie są obce mi wzorce dziedziczenia, które &lt;a href=&#34;http://martinfowler.com&#34;&gt;Martin Fowler&lt;/a&gt; opisywał w swojej książce, w tym przypadku chodzi o dziedziczenie mapowanych pól a nie fizyczne odwzorowanie tej hierarchii, czyli zagrywka czysto techniczna.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
